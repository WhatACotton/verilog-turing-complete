$date
	Fri Apr 26 12:33:56 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BUS_tb $end
$scope module DUT $end
$var wire 1 ! clk $end
$var wire 1 " from $end
$var wire 8 # in0 [7:0] $end
$var wire 8 $ in1 [7:0] $end
$var wire 1 % to $end
$var wire 8 & w_0 [7:0] $end
$var wire 8 ' out1 [7:0] $end
$var wire 8 ( out0 [7:0] $end
$var wire 1 ) nto $end
$scope module MUX0 $end
$var wire 1 ! clk $end
$var wire 8 * in0 [7:0] $end
$var wire 8 + in1 [7:0] $end
$var wire 1 " swc $end
$var wire 8 , w_2 [7:0] $end
$var wire 8 - w_1 [7:0] $end
$var wire 1 . w_0 $end
$var reg 8 / out [7:0] $end
$scope module BYTE_SWITCH_GATE_0 $end
$var wire 1 ! clk $end
$var wire 1 " in0 $end
$var wire 8 0 in1 [7:0] $end
$var reg 8 1 out [7:0] $end
$upscope $end
$scope module BYTE_SWITCH_GATE_1 $end
$var wire 1 ! clk $end
$var wire 8 2 in1 [7:0] $end
$var wire 1 . in0 $end
$var reg 8 3 out [7:0] $end
$upscope $end
$scope module NOT $end
$var wire 1 " in0 $end
$var wire 1 . out $end
$scope module NAND $end
$var wire 1 " in0 $end
$var wire 1 " in1 $end
$var wire 1 . out $end
$upscope $end
$upscope $end
$upscope $end
$scope module NOT_1 $end
$var wire 1 % in0 $end
$var wire 1 ) out $end
$scope module NAND $end
$var wire 1 % in0 $end
$var wire 1 % in1 $end
$var wire 1 ) out $end
$upscope $end
$upscope $end
$scope module SWC0 $end
$var wire 1 ! clk $end
$var wire 1 % in0 $end
$var wire 8 4 in1 [7:0] $end
$var reg 8 5 out [7:0] $end
$upscope $end
$scope module SWC1 $end
$var wire 1 ! clk $end
$var wire 1 ) in0 $end
$var wire 8 6 in1 [7:0] $end
$var reg 8 7 out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 7
bx 6
bx 5
bx 4
bx 3
b0 2
bx 1
b0 0
bx /
1.
bx -
bx ,
b0 +
b0 *
1)
bx (
bx '
bx &
0%
b0 $
b0 #
0"
0!
$end
#1
b0 -
b0 1
b0 '
b0 7
b0 &
b0 /
b0 4
b0 6
b0 ,
b0 3
b0 (
b0 5
1!
#2
0!
b10 '
b10 7
b10 &
b10 /
b10 4
b10 6
b10 ,
b10 3
b10 $
b10 +
b10 2
b10100001 #
b10100001 *
b10100001 0
#3
1!
#4
0!
0.
1"
#5
b10100001 -
b10100001 1
b0 ,
b0 3
b10100001 '
b10100001 7
b10100001 &
b10100001 /
b10100001 4
b10100001 6
1!
#6
0!
1.
0"
#7
b10 ,
b10 3
b10 '
b10 7
b10 &
b10 /
b10 4
b10 6
b0 -
b0 1
1!
#8
0!
0)
1%
#9
b10 (
b10 5
b0 '
b0 7
1!
#10
0!
1)
0%
#11
b10 '
b10 7
b0 (
b0 5
1!
#12
0!
