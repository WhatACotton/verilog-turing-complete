$date
	Fri Apr 26 11:15:42 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MUX_tb $end
$scope module DUT $end
$var wire 1 ! clk $end
$var wire 8 " in0 [7:0] $end
$var wire 8 # in1 [7:0] $end
$var wire 1 $ swc $end
$var wire 8 % w_2 [7:0] $end
$var wire 8 & w_1 [7:0] $end
$var wire 1 ' w_0 $end
$var reg 8 ( out [7:0] $end
$scope module BYTE_SWITCH_GATE_0 $end
$var wire 1 ! clk $end
$var wire 1 $ in0 $end
$var wire 8 ) in1 [7:0] $end
$var reg 8 * out [7:0] $end
$upscope $end
$scope module BYTE_SWITCH_GATE_1 $end
$var wire 1 ! clk $end
$var wire 8 + in1 [7:0] $end
$var wire 1 ' in0 $end
$var reg 8 , out [7:0] $end
$upscope $end
$scope module NOT $end
$var wire 1 $ in0 $end
$var wire 1 ' out $end
$scope module NAND $end
$var wire 1 $ in0 $end
$var wire 1 $ in1 $end
$var wire 1 ' out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ,
b0 +
bx *
b0 )
bx (
1'
bx &
bx %
0$
b0 #
b0 "
0!
$end
#1
b0 &
b0 *
b0 (
b0 %
b0 ,
1!
#2
0!
b1 (
b1 %
b1 ,
b1 #
b1 +
b1 "
b1 )
#3
1!
#4
0!
b10 (
b10 %
b10 ,
b10 #
b10 +
#5
1!
#6
0!
0'
b10000 (
b10000 %
b10000 ,
b10000 #
b10000 +
b101 "
b101 )
1$
#7
b101 (
b0 %
b0 ,
b101 &
b101 *
1!
#8
0!
b1000 #
b1000 +
b10000 (
b10000 &
b10000 *
b10000 "
b10000 )
#9
1!
#10
0!
1'
b11110000 #
b11110000 +
b11111111 (
b11111111 &
b11111111 *
b11111111 "
b11111111 )
0$
#11
b11110000 %
b11110000 ,
b11110000 (
b0 &
b0 *
1!
#12
0!
