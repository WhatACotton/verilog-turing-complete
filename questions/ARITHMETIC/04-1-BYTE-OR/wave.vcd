$date
	Sun Apr 21 06:57:24 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BYTE_OR_tb $end
$scope module DUT $end
$var wire 1 ! clk $end
$var wire 8 " in0 [7:0] $end
$var wire 8 # in1 [7:0] $end
$var wire 8 $ out [7:0] $end
$scope module OR_0 $end
$var wire 1 % in0 $end
$var wire 1 & in1 $end
$var wire 1 ' w_1 $end
$var wire 1 ( w_0 $end
$var wire 1 ) out $end
$scope module NAND $end
$var wire 1 ) out $end
$var wire 1 ' in1 $end
$var wire 1 ( in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 % in0 $end
$var wire 1 ( out $end
$scope module NAND $end
$var wire 1 % in0 $end
$var wire 1 % in1 $end
$var wire 1 ( out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 & in0 $end
$var wire 1 ' out $end
$scope module NAND $end
$var wire 1 & in0 $end
$var wire 1 & in1 $end
$var wire 1 ' out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OR_1 $end
$var wire 1 * in0 $end
$var wire 1 + in1 $end
$var wire 1 , w_1 $end
$var wire 1 - w_0 $end
$var wire 1 . out $end
$scope module NAND $end
$var wire 1 . out $end
$var wire 1 , in1 $end
$var wire 1 - in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 * in0 $end
$var wire 1 - out $end
$scope module NAND $end
$var wire 1 * in0 $end
$var wire 1 * in1 $end
$var wire 1 - out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 + in0 $end
$var wire 1 , out $end
$scope module NAND $end
$var wire 1 + in0 $end
$var wire 1 + in1 $end
$var wire 1 , out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OR_2 $end
$var wire 1 / in0 $end
$var wire 1 0 in1 $end
$var wire 1 1 w_1 $end
$var wire 1 2 w_0 $end
$var wire 1 3 out $end
$scope module NAND $end
$var wire 1 3 out $end
$var wire 1 1 in1 $end
$var wire 1 2 in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 / in0 $end
$var wire 1 2 out $end
$scope module NAND $end
$var wire 1 / in0 $end
$var wire 1 / in1 $end
$var wire 1 2 out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 0 in0 $end
$var wire 1 1 out $end
$scope module NAND $end
$var wire 1 0 in0 $end
$var wire 1 0 in1 $end
$var wire 1 1 out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OR_3 $end
$var wire 1 4 in0 $end
$var wire 1 5 in1 $end
$var wire 1 6 w_1 $end
$var wire 1 7 w_0 $end
$var wire 1 8 out $end
$scope module NAND $end
$var wire 1 8 out $end
$var wire 1 6 in1 $end
$var wire 1 7 in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 4 in0 $end
$var wire 1 7 out $end
$scope module NAND $end
$var wire 1 4 in0 $end
$var wire 1 4 in1 $end
$var wire 1 7 out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 5 in0 $end
$var wire 1 6 out $end
$scope module NAND $end
$var wire 1 5 in0 $end
$var wire 1 5 in1 $end
$var wire 1 6 out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OR_4 $end
$var wire 1 9 in0 $end
$var wire 1 : in1 $end
$var wire 1 ; w_1 $end
$var wire 1 < w_0 $end
$var wire 1 = out $end
$scope module NAND $end
$var wire 1 = out $end
$var wire 1 ; in1 $end
$var wire 1 < in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 9 in0 $end
$var wire 1 < out $end
$scope module NAND $end
$var wire 1 9 in0 $end
$var wire 1 9 in1 $end
$var wire 1 < out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 : in0 $end
$var wire 1 ; out $end
$scope module NAND $end
$var wire 1 : in0 $end
$var wire 1 : in1 $end
$var wire 1 ; out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OR_5 $end
$var wire 1 > in0 $end
$var wire 1 ? in1 $end
$var wire 1 @ w_1 $end
$var wire 1 A w_0 $end
$var wire 1 B out $end
$scope module NAND $end
$var wire 1 B out $end
$var wire 1 @ in1 $end
$var wire 1 A in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 > in0 $end
$var wire 1 A out $end
$scope module NAND $end
$var wire 1 > in0 $end
$var wire 1 > in1 $end
$var wire 1 A out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 ? in0 $end
$var wire 1 @ out $end
$scope module NAND $end
$var wire 1 ? in0 $end
$var wire 1 ? in1 $end
$var wire 1 @ out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OR_6 $end
$var wire 1 C in0 $end
$var wire 1 D in1 $end
$var wire 1 E w_1 $end
$var wire 1 F w_0 $end
$var wire 1 G out $end
$scope module NAND $end
$var wire 1 G out $end
$var wire 1 E in1 $end
$var wire 1 F in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 C in0 $end
$var wire 1 F out $end
$scope module NAND $end
$var wire 1 C in0 $end
$var wire 1 C in1 $end
$var wire 1 F out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 D in0 $end
$var wire 1 E out $end
$scope module NAND $end
$var wire 1 D in0 $end
$var wire 1 D in1 $end
$var wire 1 E out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OR_7 $end
$var wire 1 H in0 $end
$var wire 1 I in1 $end
$var wire 1 J w_1 $end
$var wire 1 K w_0 $end
$var wire 1 L out $end
$scope module NAND $end
$var wire 1 L out $end
$var wire 1 J in1 $end
$var wire 1 K in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 H in0 $end
$var wire 1 K out $end
$scope module NAND $end
$var wire 1 H in0 $end
$var wire 1 H in1 $end
$var wire 1 K out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 I in0 $end
$var wire 1 J out $end
$scope module NAND $end
$var wire 1 I in0 $end
$var wire 1 I in1 $end
$var wire 1 J out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0L
1K
1J
0I
0H
0G
1F
1E
0D
0C
0B
1A
1@
0?
0>
0=
1<
1;
0:
09
08
17
16
05
04
03
12
11
00
0/
0.
1-
1,
0+
0*
0)
1(
1'
0&
0%
b0 $
b0 #
b0 "
0!
$end
#2
b1 $
1)
0'
0(
1&
1%
b1 #
b1 "
#4
b11 $
1.
1'
0,
0&
1+
b10 #
#6
0.
1=
b10101 $
13
1,
0;
02
0+
1:
1/
b10000 #
b101 "
#8
0=
0)
03
b1000 $
18
06
1;
1(
12
07
15
0:
0%
0/
14
b1000 #
b1000 "
#10
1)
1.
13
1=
1B
1G
b11111111 $
1L
0'
0,
01
0;
0@
0E
0J
0(
0-
02
0<
0A
0F
0K
1&
1+
10
1:
1?
1D
1I
1%
1*
1/
19
1>
1C
1H
b11111111 #
b11111111 "
#12
