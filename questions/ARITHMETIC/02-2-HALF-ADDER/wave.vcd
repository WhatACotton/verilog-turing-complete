$date
	Thu Apr 18 17:52:39 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module HALF_ADDER_tb $end
$scope module DUT $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 # out $end
$var wire 1 $ car $end
$scope module AND $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 % w_1 $end
$var wire 1 $ out $end
$scope module NAND $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 % out $end
$upscope $end
$scope module NOT $end
$var wire 1 % in0 $end
$var wire 1 $ out $end
$scope module NAND $end
$var wire 1 % in0 $end
$var wire 1 % in1 $end
$var wire 1 $ out $end
$upscope $end
$upscope $end
$upscope $end
$scope module XOR $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 & w_1 $end
$var wire 1 ' w_0 $end
$var wire 1 # out $end
$scope module AND $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 ( w_1 $end
$var wire 1 & out $end
$scope module NAND $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 ( out $end
$upscope $end
$scope module NOT $end
$var wire 1 ( in0 $end
$var wire 1 & out $end
$scope module NAND $end
$var wire 1 ( in0 $end
$var wire 1 ( in1 $end
$var wire 1 & out $end
$upscope $end
$upscope $end
$upscope $end
$scope module NOR0 $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 ) w_1 $end
$var wire 1 * w_0 $end
$var wire 1 ' out $end
$var wire 1 + n_out $end
$scope module NAND $end
$var wire 1 + out $end
$var wire 1 ) in1 $end
$var wire 1 * in0 $end
$upscope $end
$scope module NOT $end
$var wire 1 + in0 $end
$var wire 1 ' out $end
$scope module NAND $end
$var wire 1 + in0 $end
$var wire 1 + in1 $end
$var wire 1 ' out $end
$upscope $end
$upscope $end
$scope module NOT0 $end
$var wire 1 ! in0 $end
$var wire 1 * out $end
$scope module NAND $end
$var wire 1 ! in0 $end
$var wire 1 ! in1 $end
$var wire 1 * out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 " in0 $end
$var wire 1 ) out $end
$scope module NAND $end
$var wire 1 " in0 $end
$var wire 1 " in1 $end
$var wire 1 ) out $end
$upscope $end
$upscope $end
$upscope $end
$scope module NOR1 $end
$var wire 1 ' in0 $end
$var wire 1 & in1 $end
$var wire 1 , w_1 $end
$var wire 1 - w_0 $end
$var wire 1 # out $end
$var wire 1 . n_out $end
$scope module NAND $end
$var wire 1 . out $end
$var wire 1 , in1 $end
$var wire 1 - in0 $end
$upscope $end
$scope module NOT $end
$var wire 1 . in0 $end
$var wire 1 # out $end
$scope module NAND $end
$var wire 1 . in0 $end
$var wire 1 . in1 $end
$var wire 1 # out $end
$upscope $end
$upscope $end
$scope module NOT0 $end
$var wire 1 ' in0 $end
$var wire 1 - out $end
$scope module NAND $end
$var wire 1 ' in0 $end
$var wire 1 ' in1 $end
$var wire 1 - out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 & in0 $end
$var wire 1 , out $end
$scope module NAND $end
$var wire 1 & in0 $end
$var wire 1 & in1 $end
$var wire 1 , out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1.
0-
1,
0+
1*
1)
1(
1'
0&
1%
0$
0#
0"
0!
$end
#2
1#
0.
1-
0'
1+
0*
1!
#4
0)
1*
1"
0!
#6
0#
1.
0,
1$
1&
0%
0(
0*
1!
#8
