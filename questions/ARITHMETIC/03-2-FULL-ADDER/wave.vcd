$date
	Sun Apr 21 07:14:17 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FULL_ADDER_tb $end
$scope module DUT $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 # in2 $end
$var wire 1 $ w_2 $end
$var wire 1 % w_1 $end
$var wire 1 & w_0 $end
$var wire 1 ' out $end
$var wire 1 ( cout $end
$scope module AND0 $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 ) w_1 $end
$var wire 1 % out $end
$scope module NAND $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 ) out $end
$upscope $end
$scope module NOT $end
$var wire 1 ) in0 $end
$var wire 1 % out $end
$scope module NAND $end
$var wire 1 ) in0 $end
$var wire 1 ) in1 $end
$var wire 1 % out $end
$upscope $end
$upscope $end
$upscope $end
$scope module AND1 $end
$var wire 1 # in1 $end
$var wire 1 * w_1 $end
$var wire 1 $ out $end
$var wire 1 & in0 $end
$scope module NAND $end
$var wire 1 # in1 $end
$var wire 1 * out $end
$var wire 1 & in0 $end
$upscope $end
$scope module NOT $end
$var wire 1 * in0 $end
$var wire 1 $ out $end
$scope module NAND $end
$var wire 1 * in0 $end
$var wire 1 * in1 $end
$var wire 1 $ out $end
$upscope $end
$upscope $end
$upscope $end
$scope module OR0 $end
$var wire 1 % in0 $end
$var wire 1 $ in1 $end
$var wire 1 + w_1 $end
$var wire 1 , w_0 $end
$var wire 1 ( out $end
$scope module NAND $end
$var wire 1 ( out $end
$var wire 1 + in1 $end
$var wire 1 , in0 $end
$upscope $end
$scope module NOT0 $end
$var wire 1 % in0 $end
$var wire 1 , out $end
$scope module NAND $end
$var wire 1 % in0 $end
$var wire 1 % in1 $end
$var wire 1 , out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 $ in0 $end
$var wire 1 + out $end
$scope module NAND $end
$var wire 1 $ in0 $end
$var wire 1 $ in1 $end
$var wire 1 + out $end
$upscope $end
$upscope $end
$upscope $end
$scope module XOR0 $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 - w_1 $end
$var wire 1 . w_0 $end
$var wire 1 & out $end
$scope module AND $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 / w_1 $end
$var wire 1 - out $end
$scope module NAND $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 / out $end
$upscope $end
$scope module NOT $end
$var wire 1 / in0 $end
$var wire 1 - out $end
$scope module NAND $end
$var wire 1 / in0 $end
$var wire 1 / in1 $end
$var wire 1 - out $end
$upscope $end
$upscope $end
$upscope $end
$scope module NOR0 $end
$var wire 1 ! in0 $end
$var wire 1 " in1 $end
$var wire 1 0 w_1 $end
$var wire 1 1 w_0 $end
$var wire 1 . out $end
$var wire 1 2 n_out $end
$scope module NAND $end
$var wire 1 2 out $end
$var wire 1 0 in1 $end
$var wire 1 1 in0 $end
$upscope $end
$scope module NOT $end
$var wire 1 2 in0 $end
$var wire 1 . out $end
$scope module NAND $end
$var wire 1 2 in0 $end
$var wire 1 2 in1 $end
$var wire 1 . out $end
$upscope $end
$upscope $end
$scope module NOT0 $end
$var wire 1 ! in0 $end
$var wire 1 1 out $end
$scope module NAND $end
$var wire 1 ! in0 $end
$var wire 1 ! in1 $end
$var wire 1 1 out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 " in0 $end
$var wire 1 0 out $end
$scope module NAND $end
$var wire 1 " in0 $end
$var wire 1 " in1 $end
$var wire 1 0 out $end
$upscope $end
$upscope $end
$upscope $end
$scope module NOR1 $end
$var wire 1 . in0 $end
$var wire 1 - in1 $end
$var wire 1 3 w_1 $end
$var wire 1 4 w_0 $end
$var wire 1 & out $end
$var wire 1 5 n_out $end
$scope module NAND $end
$var wire 1 5 out $end
$var wire 1 3 in1 $end
$var wire 1 4 in0 $end
$upscope $end
$scope module NOT $end
$var wire 1 5 in0 $end
$var wire 1 & out $end
$scope module NAND $end
$var wire 1 5 in0 $end
$var wire 1 5 in1 $end
$var wire 1 & out $end
$upscope $end
$upscope $end
$scope module NOT0 $end
$var wire 1 . in0 $end
$var wire 1 4 out $end
$scope module NAND $end
$var wire 1 . in0 $end
$var wire 1 . in1 $end
$var wire 1 4 out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 - in0 $end
$var wire 1 3 out $end
$scope module NAND $end
$var wire 1 - in0 $end
$var wire 1 - in1 $end
$var wire 1 3 out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module XOR1 $end
$var wire 1 & in0 $end
$var wire 1 # in1 $end
$var wire 1 6 w_1 $end
$var wire 1 7 w_0 $end
$var wire 1 ' out $end
$scope module AND $end
$var wire 1 & in0 $end
$var wire 1 # in1 $end
$var wire 1 8 w_1 $end
$var wire 1 6 out $end
$scope module NAND $end
$var wire 1 & in0 $end
$var wire 1 # in1 $end
$var wire 1 8 out $end
$upscope $end
$scope module NOT $end
$var wire 1 8 in0 $end
$var wire 1 6 out $end
$scope module NAND $end
$var wire 1 8 in0 $end
$var wire 1 8 in1 $end
$var wire 1 6 out $end
$upscope $end
$upscope $end
$upscope $end
$scope module NOR0 $end
$var wire 1 & in0 $end
$var wire 1 # in1 $end
$var wire 1 9 w_1 $end
$var wire 1 : w_0 $end
$var wire 1 7 out $end
$var wire 1 ; n_out $end
$scope module NAND $end
$var wire 1 ; out $end
$var wire 1 9 in1 $end
$var wire 1 : in0 $end
$upscope $end
$scope module NOT $end
$var wire 1 ; in0 $end
$var wire 1 7 out $end
$scope module NAND $end
$var wire 1 ; in0 $end
$var wire 1 ; in1 $end
$var wire 1 7 out $end
$upscope $end
$upscope $end
$scope module NOT0 $end
$var wire 1 & in0 $end
$var wire 1 : out $end
$scope module NAND $end
$var wire 1 & in0 $end
$var wire 1 & in1 $end
$var wire 1 : out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 # in0 $end
$var wire 1 9 out $end
$scope module NAND $end
$var wire 1 # in0 $end
$var wire 1 # in1 $end
$var wire 1 9 out $end
$upscope $end
$upscope $end
$upscope $end
$scope module NOR1 $end
$var wire 1 7 in0 $end
$var wire 1 6 in1 $end
$var wire 1 < w_1 $end
$var wire 1 = w_0 $end
$var wire 1 ' out $end
$var wire 1 > n_out $end
$scope module NAND $end
$var wire 1 > out $end
$var wire 1 < in1 $end
$var wire 1 = in0 $end
$upscope $end
$scope module NOT $end
$var wire 1 > in0 $end
$var wire 1 ' out $end
$scope module NAND $end
$var wire 1 > in0 $end
$var wire 1 > in1 $end
$var wire 1 ' out $end
$upscope $end
$upscope $end
$scope module NOT0 $end
$var wire 1 7 in0 $end
$var wire 1 = out $end
$scope module NAND $end
$var wire 1 7 in0 $end
$var wire 1 7 in1 $end
$var wire 1 = out $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 6 in0 $end
$var wire 1 < out $end
$scope module NAND $end
$var wire 1 6 in0 $end
$var wire 1 6 in1 $end
$var wire 1 < out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1>
0=
1<
0;
1:
19
18
17
06
15
04
13
02
11
10
1/
1.
0-
1,
1+
1*
1)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#2
1'
0>
1=
07
1;
0:
1&
05
14
0.
12
01
1!
#4
00
11
1"
0!
#6
0'
1>
0=
17
0;
1:
0&
1(
15
0,
03
1%
1-
0)
0/
01
1!
#8
1<
1+
06
0$
1'
18
1:
1*
0>
0&
1=
0(
15
04
07
1,
13
1.
1;
0%
0-
02
09
10
1)
1/
11
1#
0"
0!
#10
0'
1>
1(
0<
0+
16
1$
08
0:
0*
1&
05
14
0.
12
01
1!
#12
00
11
1"
0!
#14
1'
0>
1<
1+
06
0$
18
1:
1*
0&
15
0,
03
1%
1-
0)
0/
01
1!
#16
